# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2003-03-02 17:23+0100\n"
"PO-Revision-Date: 2002-10-11 01:20+0200\n"
"Last-Translator: \n"
"Language-Team:  <de@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 0.9.6\n"

#: convertbool2booltristate.cpp:50
#, fuzzy
msgid ""
"_: Component\n"
"Boolean to Boolean Tristate"
msgstr "Constante logique vraie"

#: convertbool2booltristate.cpp:52
#, fuzzy
msgid ""
"_: Component\n"
"Converter/Boolean to Boolean Tristate"
msgstr "Constante logique vraie"

#: convertbool2booltristate.cpp:73 convertbooltristate2bool.cpp:74
#, fuzzy
msgid ""
"_: Connector\n"
"Input"
msgstr "Entrée %1"

#: convertbool2booltristate.cpp:80
#, fuzzy
msgid ""
"_: Connector\n"
"Enable"
msgstr "Enable"

#: booltristate1out.cpp:62 convertbool2booltristate.cpp:86
#, fuzzy
msgid ""
"_: Connector\n"
"Output"
msgstr "Sortie %1"

#: dflipflop.cpp:58
msgid ""
"_: Component\n"
"D Latch"
msgstr "Bascule D"

#: dflipflop.cpp:60
msgid ""
"_: Component\n"
"Boolean/Flip Flop/D Latch"
msgstr "Logique/Bascule/Bascule D"

#: dflipflop.cpp:81
msgid ""
"_: Boolean-Connector\n"
"Data"
msgstr "Data"

#: dflipflop.cpp:86 multidlatch.cpp:105
msgid ""
"_: Boolean-Connector\n"
"Enable"
msgstr "Enable"

#: booleancounter.cpp:103 dflipflop.cpp:97 jkflipflop.cpp:121 monoflop.cpp:95
#: multidlatch.cpp:101
msgid ""
"_: Boolean\n"
"Reset input:"
msgstr "Entrée Reset :"

#: dflipflop.cpp:101 jkflipflop.cpp:125
msgid ""
"_: Boolean\n"
"Set input:"
msgstr "Entrée Set :"

#: convertbooltristate2bool.cpp:47
#, fuzzy
msgid ""
"_: Component\n"
"Boolean Tristate to Boolean"
msgstr "Constante logique fausse"

#: convertbooltristate2bool.cpp:49
#, fuzzy
msgid ""
"_: Component\n"
"Converter/Boolean Tristate to Boolean"
msgstr "Constante logique fausse"

#: convertbooltristate2bool.cpp:81
#, fuzzy
msgid ""
"_: Connector\n"
"Data Output"
msgstr "Sortie %1"

#: convertbooltristate2bool.cpp:89
#, fuzzy
msgid ""
"_: Connector\n"
"Wire active"
msgstr "Adresse %1"

#: booleanconstant.cpp:46
msgid ""
"_: Component\n"
"Boolean Const True"
msgstr "Constante logique vraie"

#: booleanconstant.cpp:48
msgid ""
"_: Component\n"
"Boolean/Input/Const True"
msgstr "Logique/Entrée/Constante vraie"

#: booleanconstant.cpp:59
msgid ""
"_: Component\n"
"Boolean Const False"
msgstr "Constante logique fausse"

#: booleanconstant.cpp:61
msgid ""
"_: Component\n"
"Boolean/Input/Const False"
msgstr "Logique/Entrée/Constante fausse"

#: boolean2in1out.cpp:69 booleanconstant.cpp:165
msgid ""
"_: Boolean-Connector\n"
"Output"
msgstr "Output"

#: flipflopbase.cpp:55
msgid ""
"_: Boolean-Connector\n"
"/Output"
msgstr "/Output"

#: flipflopbase.cpp:61
msgid ""
"_: Boolean-Connector\n"
"Set"
msgstr "Set"

#: booleancounter.cpp:97 flipflopbase.cpp:66 multidlatch.cpp:95
msgid ""
"_: Boolean-Connector\n"
"Reset"
msgstr "Reset"

#: flipflopbase.cpp:140
msgid ""
"_: Boolean\n"
"Dominant Input:"
msgstr "Entrée dominante :"

#: flipflopbase.cpp:146
msgid ""
"_: Boolean\n"
"Set Input"
msgstr "Entrée Set"

#: flipflopbase.cpp:147 monoflop.cpp:266
msgid ""
"_: Boolean\n"
"Reset Input"
msgstr "Entrée Reset"

#: flipflopbase.cpp:149
msgid ""
"_: Boolean\n"
"Set here dominant input."
msgstr "Selectionnez ici l'entrée dominante."

#: jkflipflop.cpp:61
msgid ""
"_: Component\n"
"JK Flip Flop"
msgstr "Bascule JK"

#: jkflipflop.cpp:63
msgid ""
"_: Component\n"
"Boolean/Flip Flop/JK-FF"
msgstr "Logique/Bascule/JK"

#: jkflipflop.cpp:74
msgid ""
"_: Component\n"
"JK Master Slave Flip Flop"
msgstr "Bascule JK maître esclave"

#: jkflipflop.cpp:76
msgid ""
"_: Component\n"
"Boolean/Flip Flop/JK-MS-FF"
msgstr "Logique/Bascule/JK maître esclave"

#: jkflipflop.cpp:101
msgid ""
"_: Boolean-Connector JK-FF\n"
"J"
msgstr "J"

#: jkflipflop.cpp:106
msgid ""
"_: Boolean-Connector JK-FF\n"
"K"
msgstr "K"

#: jkflipflop.cpp:111
msgid ""
"_: Boolean-Connector\n"
"Clock"
msgstr "Clock"

#: jkflipflop.cpp:334
msgid ""
"_: Boolean\n"
"Master Slave:"
msgstr "Maître/Esclave :"

#: jkflipflop.cpp:340
msgid ""
"_: Boolean\n"
"Enabled"
msgstr "Activé"

#: jkflipflop.cpp:341
msgid ""
"_: Boolean\n"
"Disabled"
msgstr "Désactivé"

#: jkflipflop.cpp:343
msgid ""
"_: Boolean\n"
"Enables the Master Salve functionality.\n"
"If disabled, the FF works in single edge mode."
msgstr ""
"Active le mode maître/esclave.\n"
"Si désactivé, la bascule fonctionne en déclenchement sur front."

#: booleanxor.cpp:48
msgid ""
"_: Component\n"
"Boolean Exclusive OR"
msgstr "Porte OU exclusif"

#: booleanxor.cpp:50
msgid ""
"_: Component\n"
"Boolean/Gates/XOR"
msgstr "Logique/Porte/OU exclusif"

#: booleanxor.cpp:61
msgid ""
"_: Component\n"
"Boolean Exclusive NOR"
msgstr "Porte NON-OU exclusif"

#: booleanxor.cpp:63
msgid ""
"_: Component\n"
"Boolean/Gates/XNOR"
msgstr "Logique/Porte/NON-OU exclusif"

#: booleancounter.cpp:60
msgid ""
"_: Component\n"
"Boolean Counter with RCO and RBO"
msgstr "Compteur logique avec RCO et RBO"

#: booleancounter.cpp:62
msgid ""
"_: Component\n"
"Boolean/Counter/with RCO and RBO"
msgstr "Logique/Compteur/avec RCO et RBO"

#: booleancounter.cpp:108
msgid ""
"_: Boolean-Connector\n"
"Clock Up"
msgstr "Clock Up"

#: booleancounter.cpp:114
msgid ""
"_: Boolean\n"
"Clock up input:"
msgstr "Entrée Clock Up :"

#: booleancounter.cpp:121
msgid ""
"_: Boolean-Connector\n"
"Clock Down"
msgstr "Clock Down"

#: booleancounter.cpp:127
msgid ""
"_: Boolean\n"
"Clock down input:"
msgstr "Entrée Clock Down :"

#: booleancounter.cpp:133 multidlatch.cpp:120
#, c-format
msgid ""
"_: Boolean-Connector\n"
"Output %1"
msgstr "Sortie %1"

#: booleancounter.cpp:141
msgid ""
"_: Boolean-Connector\n"
"Ripple Borrow Out"
msgstr "Ripple Borrow Out"

#: booleancounter.cpp:146
msgid ""
"_: Boolean\n"
"Ripple borrow output:"
msgstr "Sortie Ripple Borrow :"

#: booleancounter.cpp:151
msgid ""
"_: Boolean-Connector\n"
"Ripple Carry Out"
msgstr "Ripple Carry Out"

#: booleancounter.cpp:156
msgid ""
"_: Boolean\n"
"Ripple carry output:"
msgstr "Sortie Ripple Carry :"

#: booleancounter.cpp:205
msgid ""
"_: Boolean\n"
"Connector 'Clock Up' or 'Clock Down' must be visible."
msgstr "Le connecteur \"Clock Up\" ou \"Clock Down\" doit être visible."

#: booleancounter.cpp:302
msgid ""
"_: Boolean\n"
"Counter"
msgstr "Compteur"

#: booleancounter.cpp:426
msgid ""
"_: Boolean\n"
"Counter width:"
msgstr "Taille du compteur :"

#: booleancounter.cpp:432
msgid ""
"_: Boolean\n"
" bit"
msgstr " bit"

#: booleancounter.cpp:433
msgid ""
"_: Boolean\n"
"Sets the counter width."
msgstr "Change la taille du compteur."

#: booleancounter.cpp:438
msgid ""
"_: Boolean\n"
"Maximum:"
msgstr "Maximum :"

#: booleancounter.cpp:442
msgid ""
"_: Boolean\n"
"Sets the maximum counter value.\n"
"This value is used if the counter wraps around."
msgstr ""
"Valeur maximum pour le compteur.\n"
"Cette valeur est utilisée lorsque le compteur reboucle."

#: booleancounter.cpp:448
msgid ""
"_: Boolean\n"
"Minimum:"
msgstr "Minimum :"

#: booleancounter.cpp:452
msgid ""
"_: Boolean\n"
"Sets the minimum counter value.\n"
"This value is used if the counter wraps around."
msgstr ""
"Valeur minimum pour le compteur.\n"
"Cette valeur est utilisée lorsque le compteur reboucle."

#: booleancounter.cpp:458
msgid ""
"_: Boolean\n"
"Reset value:"
msgstr "Valeur initiale :"

#: booleancounter.cpp:462
msgid ""
"_: Boolean\n"
"Sets the reset counter value.\n"
"This value is also used if the counter is reseted."
msgstr ""
"Paramètre la valeur initiale du compteur.\n"
"Cette valeur est aussi utilisée lorsque le compteur est remis à zéro."

#: booleancounter.cpp:469
msgid ""
"_: Boolean\n"
"Hint: minimum counter width is %1 bit"
msgstr "Note : la taille minimum du compteur est %1 bit"

#: booleancounter.cpp:472
msgid ""
"_: Boolean\n"
"This is the minimal possible counter width.\n"
"This value depends on wired connectors."
msgstr ""
"C'est la taille minimum du compteur.\n"
"Cette valeur dépend des connecteurs branchés."

#: monoflop.cpp:62
msgid ""
"_: Component\n"
"Mono Flop"
msgstr "Monostable"

#: monoflop.cpp:64
msgid ""
"_: Component\n"
"Boolean/Flip Flop/Mono Flop"
msgstr "Logique/Bascule/Monostable"

#: monoflop.cpp:89
msgid ""
"_: Boolean\n"
"Trigger"
msgstr "Trigger"

#: monoflop.cpp:265
msgid ""
"_: Boolean\n"
"Trigger Input"
msgstr "Entrée trigger"

#: monoflop.cpp:272
msgid ""
"_: Boolean\n"
"Retrigger:"
msgstr "Retrigger :"

#: monoflop.cpp:278
msgid ""
"_: Boolean\n"
"On"
msgstr "Activé"

#: monoflop.cpp:279
msgid ""
"_: Boolean\n"
"Off"
msgstr "Désactivé"

#: monoflop.cpp:281
msgid ""
"_: Boolean\n"
"Set here the retrigger mode."
msgstr "Activez ici le mode retrigger."

#: monoflop.cpp:287
msgid ""
"_: Boolean\n"
"Time:"
msgstr "Durée :"

#: monoflop.cpp:293
msgid ""
"_: Boolean\n"
"Set here the duration."
msgstr "Choisissez ici la durée."

#: extconnbooltristate.cpp:138
msgid "Default State:"
msgstr ""

#: extconnbooltristate.cpp:144
msgid ""
"Sets the default state of the external connector.\n"
"This state is used if the external connector is not connected."
msgstr ""

#: extconnbooltristate.cpp:190
msgid ""
"_: Component\n"
"External Connector Boolean Tristate Input"
msgstr ""

#: extconnbooltristate.cpp:192
msgid ""
"_: Component\n"
"External Connector/Bool Tristate Input"
msgstr ""

#: extconnbooltristate.cpp:210 extconnbooltristate.cpp:238
#, fuzzy
msgid ""
"_: Connector\n"
"Internal"
msgstr "Entrée %1"

#: extconnbooltristate.cpp:217 extconnbooltristate.cpp:246
#, fuzzy
msgid ""
"_: Connector\n"
"External"
msgstr "Enable"

#: extconnbooltristate.cpp:264
msgid ""
"_: Component\n"
"External Connector Boolean Tristate Output"
msgstr ""

#: extconnbooltristate.cpp:266
msgid ""
"_: Component\n"
"External Connector/Bool Tristate Output"
msgstr ""

#: delay.cpp:54
msgid ""
"_: Component\n"
"Delay"
msgstr "Retard"

#: delay.cpp:56
msgid ""
"_: Component\n"
"Boolean/Timing/Delay"
msgstr "Logique/Temps/Retard"

#: delay.cpp:80 demultiplexer.cpp:116 inverter.cpp:83
msgid ""
"_: Boolean-Connector\n"
"Input"
msgstr "Entrée"

#: delay.cpp:154
#, c-format
msgid ""
"_: Boolean\n"
"Delay limited: %1"
msgstr "Retard limité à %1"

#: delay.cpp:257
msgid ""
"_: Boolean\n"
"Delay time:"
msgstr "Retard :"

#: delay.cpp:269
msgid ""
"_: Boolean\n"
"Set here the duration auf the delay."
msgstr "Choisissez ici la durée du retard."

#: delay.cpp:273
msgid ""
"_: Boolean - Hint in dialog\n"
"Hint:"
msgstr "Conseil :"

#: delay.cpp:281
msgid ""
"_: Boolean - Hint in dialog\n"
"Shows the effective delay time.\n"
"This time depends on the value of 'Simulation time per tick'."
msgstr ""
"Retard effectif.\n"
"Ce retard dépend du temps de cycle."

#: delay.cpp:317
msgid ""
"_: Boolean - prints delay in a suitable time unit and ticks\n"
"effective delay time %1 / %2 ticks"
msgstr "retard effectif %1 / %2 cycles"

#: booleanor.cpp:51
msgid ""
"_: Component\n"
"Boolean OR"
msgstr "OU logique"

#: booleanor.cpp:53
msgid ""
"_: Component\n"
"Boolean/Gates/OR"
msgstr "Logique/Porte/OU"

#: booleanor.cpp:64
msgid ""
"_: Component\n"
"Boolean NOR"
msgstr "NON-OU logique"

#: booleanor.cpp:66
msgid ""
"_: Component\n"
"Boolean/Gates/NOR"
msgstr "Logique/Porte/NON-OU"

#: booltristateand.cpp:47
#, fuzzy
msgid ""
"_: Component\n"
"Boolean AND with Tristate output"
msgstr "Constante logique vraie"

#: booltristateand.cpp:49
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Tristate/Gates/AND with Tristate output"
msgstr "Logique/Porte/NON-OU"

#: booltristateand.cpp:60
#, fuzzy
msgid ""
"_: Component\n"
"Boolean NAND with Tristate output"
msgstr "Constante logique vraie"

#: booltristateand.cpp:62
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Tristate/Gates/NAND with Tristate output"
msgstr "Logique/Porte/NON-OU"

#: booltristate1out.cpp:186
#, fuzzy
msgid "Reset State: "
msgstr "État initial :"

#: booltristate1out.cpp:192
#, fuzzy
msgid "Changes the reset state of the component to true, false or inactive."
msgstr "Changez l'état initial des canaux ici."

#: booltristate1out.cpp:234
#, fuzzy
msgid ""
"_: Boolean-Connector\n"
"Enable Output"
msgstr "Enable Latch Output"

#: booltristate1out.cpp:316 multidlatch.cpp:110
#, c-format
msgid ""
"_: Boolean-Connector\n"
"Input %1"
msgstr "Entrée %1"

#: multidlatch.cpp:68
msgid ""
"_: Component\n"
"Multiple D Latches"
msgstr "Registre"

#: multidlatch.cpp:70
msgid ""
"_: Component\n"
"Boolean/Flip Flop/Multiple D Latches"
msgstr "Logique/Bascule/Registre"

#: multidlatch.cpp:206
msgid ""
"_: Boolean\n"
"&Add Latch"
msgstr "&Ajouter un canal"

#: multidlatch.cpp:214
msgid ""
"_: Boolean\n"
"&Delete Latch"
msgstr "&Supprimer le canal"

#: multidlatch.cpp:363
msgid ""
"_: Boolean\n"
"Number of latches: "
msgstr "Nombre de canaux :"

#: multidlatch.cpp:368
msgid ""
"_: Boolean\n"
"Change number of latches here."
msgstr "Changez le nombre de canaux ici."

#: multidlatch.cpp:373
msgid ""
"_: Boolean\n"
"Reset value: "
msgstr "Valeur initiale :"

#: multidlatch.cpp:378
msgid ""
"_: Boolean\n"
"Set the reset value of the latches here."
msgstr "Paramétrez la valeur d'initialisation des registres ici."

#: multiplexer.cpp:67
msgid ""
"_: Component\n"
"Boolean Multiplexer"
msgstr "Multiplexeur logique"

#: multiplexer.cpp:69
msgid ""
"_: Component\n"
"Boolean/Mux & Demux/Multiplexer"
msgstr "Logique/(Dé)Multiplexeur/Multiplexeur"

#: demultiplexer.cpp:95 multiplexer.cpp:98
msgid ""
"_: Boolean-Connector\n"
"Enable Latch Output"
msgstr "Enable Latch Output"

#: demultiplexer.cpp:101 multiplexer.cpp:104
msgid ""
"_: Boolean\n"
"Enable Output Latch:"
msgstr "Enable Output Latch :"

#: demultiplexer.cpp:105 multiplexer.cpp:108
msgid ""
"_: Boolean-Connector\n"
"Enable Latch Address"
msgstr "Enable Latch Address"

#: demultiplexer.cpp:111 multiplexer.cpp:114
msgid ""
"_: Boolean\n"
"Enable Address Latch:"
msgstr "Enable Address Latch :"

#: multiplexer.cpp:118
#, c-format
msgid ""
"_: Connector\n"
"Input %1"
msgstr "Entrée %1"

#: demultiplexer.cpp:133 multiplexer.cpp:128
#, c-format
msgid ""
"_: Connector\n"
"Address %1"
msgstr "Adresse %1"

#: demultiplexer.cpp:204 multiplexer.cpp:197
msgid ""
"_: Boolean\n"
"&Add Channel"
msgstr "&Ajouter un canal"

#: demultiplexer.cpp:211 multiplexer.cpp:204
msgid ""
"_: Boolean\n"
"&Delete Channel"
msgstr "&Supprimer le canal"

#: demultiplexer.cpp:399 multiplexer.cpp:392
msgid ""
"_: Boolean\n"
"Number of channels: "
msgstr "Nombre de canaux :"

#: demultiplexer.cpp:404 multiplexer.cpp:397
msgid ""
"_: Boolean\n"
"Change number of channels here."
msgstr "Changez le nombre de canaux ici."

#: multiplexer.cpp:402
msgid ""
"_: Boolean\n"
"Reset state: "
msgstr "État initial :"

#: multiplexer.cpp:407
msgid ""
"_: Boolean\n"
"Change the reset state of the channels here."
msgstr "Changez l'état initial des canaux ici."

#: boolean2in1out.cpp:74
msgid ""
"_: Boolean-Connector\n"
"Input A"
msgstr "Entrée A"

#: boolean2in1out.cpp:79
msgid ""
"_: Boolean-Connector\n"
"Input B"
msgstr "Entrée B"

#: boolean7segment.cpp:60
msgid ""
"_: Component\n"
"7 Segment Display"
msgstr "Afficheur 7 segments"

#: boolean7segment.cpp:62
msgid ""
"_: Component\n"
"Boolean/Output/7 Segment Display"
msgstr "Logique/Sortie/Afficheur 7 segments"

#: boolean7segment.cpp:96
msgid ""
"_: Boolean-Connector\n"
"Input 1"
msgstr "Entrée 1"

#: boolean7segment.cpp:101
msgid ""
"_: Boolean-Connector\n"
"Input 2"
msgstr "Entrée 2"

#: boolean7segment.cpp:106
msgid ""
"_: Boolean-Connector\n"
"Input 4"
msgstr "Entrée 4"

#: boolean7segment.cpp:111
msgid ""
"_: Boolean-Connector\n"
"Input 8"
msgstr "Entrée 8"

#: rsflipflop.cpp:50
msgid ""
"_: Component\n"
"RS Flip Flop"
msgstr "Bascule RS"

#: rsflipflop.cpp:52
msgid ""
"_: Component\n"
"Boolean/Flip Flop/RS-FF"
msgstr "Logique/Bascule/Bascule RS"

#: demultiplexer.cpp:66
msgid ""
"_: Component\n"
"Boolean Demultiplexer"
msgstr "Démultiplexeur logique"

#: demultiplexer.cpp:68
msgid ""
"_: Component\n"
"Boolean/Mux & Demux/Demultiplexer"
msgstr "Logique/(Dé)Multiplexeur/Démultiplexeur"

#: demultiplexer.cpp:123
#, c-format
msgid ""
"_: Connector\n"
"Output %1"
msgstr "Sortie %1"

#: inverter.cpp:49
#, fuzzy
msgid ""
"_: Component\n"
"Inverter"
msgstr "Retard"

#: inverter.cpp:51
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Gates/Inverter"
msgstr "Logique/Porte/OU"

#: inverter.cpp:62
#, fuzzy
msgid ""
"_: Component\n"
"Identity"
msgstr "Retard"

#: inverter.cpp:64
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Gates/Identity"
msgstr "Logique/Porte/OU"

#: booltristatexor.cpp:47
#, fuzzy
msgid ""
"_: Component\n"
"Boolean XOR with Tristate output"
msgstr "Constante logique vraie"

#: booltristatexor.cpp:49
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Tristate/Gates/XOR with Tristate output"
msgstr "Logique/Porte/OU exclusif"

#: booltristatexor.cpp:60
#, fuzzy
msgid ""
"_: Component\n"
"Boolean XNOR with Tristate output"
msgstr "NON-OU logique"

#: booltristatexor.cpp:62
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Tristate/Gates/XNOR with Tristate output"
msgstr "Logique/Porte/NON-OU exclusif"

#: booltristateor.cpp:47
#, fuzzy
msgid ""
"_: Component\n"
"Boolean OR with Tristate output"
msgstr "Constante logique vraie"

#: booltristateor.cpp:49
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Tristate/Gates/OR with Tristate output"
msgstr "Logique/Porte/OU"

#: booltristateor.cpp:60
#, fuzzy
msgid ""
"_: Component\n"
"Boolean NOR with Tristate output"
msgstr "NON-OU logique"

#: booltristateor.cpp:62
#, fuzzy
msgid ""
"_: Component\n"
"Boolean/Tristate/Gates/NOR with Tristate output"
msgstr "Logique/Porte/NON-OU"
