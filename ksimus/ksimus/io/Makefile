# KDE tags expanded automatically by am_edit - $Revision: 1.1 $ 
# Makefile.in generated by automake 1.6.3 from Makefile.am.
# ksimus/io/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ../..

prefix = /opt/kde2
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/ksimus
pkglibdir = $(libdir)/ksimus
pkgincludedir = $(includedir)/ksimus
top_builddir = ../..

ACLOCAL = ${SHELL} /home/rasmus/Projekte/ksimus-0.3.7/admin/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /home/rasmus/Projekte/ksimus-0.3.7/admin/missing --run autoconf
AUTOMAKE = ${SHELL} /home/rasmus/Projekte/ksimus-0.3.7/admin/missing --run automake-1.6
AUTOHEADER = ${SHELL} /home/rasmus/Projekte/ksimus-0.3.7/admin/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG)
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = i686-pc-linux-gnu
build_triplet = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_alias = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /home/rasmus/Projekte/ksimus-0.3.7/admin/missing --run tar
ARTSCCONFIG = /opt/kde2/bin/artsc-config
AS = @AS@
AUTODIRS = 
AWK = gawk
CC = gcc
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in
CPP = gcc -E
CXX = g++
CXXCPP = g++ -E
DCOPIDL = /opt/kde2/bin/dcopidl
DCOPIDL2CPP = /opt/kde2/bin/dcopidl2cpp
DCOP_DEPENDENCIES = $(DCOPIDL)
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = /home/rasmus/bin/msgfmt
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = /opt/kde2/bin/kde-config
KDE_CXXFLAGS = 
KDE_EXTRA_RPATH = 
KDE_INCLUDES = -I/opt/kde2/include
KDE_LDFLAGS = -L/opt/kde2/lib
KDE_PLUGIN = -avoid-version -module -no-undefined $(KDE_RPATH)
KDE_RPATH = -R $(kde_libraries) -R $(qt_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDE_XSL_STYLESHEET = /opt/kde2/share/apps/ksgmltools2/customization/kde-chunk.xsl
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBDL = -ldl
LIBGEN = @LIBGEN@
LIBJPEG = -ljpeg
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = -lpng -lz -lm
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = -lresolv
LIBSHADOW = @LIBSHADOW@
LIBSM = -lSM -lICE
LIBSOCKET =  -lresolv
LIBTIFF = @LIBTIFF@
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBUTIL = -lutil
LIBXINERAMA = 
LIBZ = -lz
LIB_KAB = -lkab
LIB_KDECORE = -lkdecore
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkfile
LIB_KFM = 
LIB_KFORMULA = -lkformula
LIB_KHTML = -lkhtml
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lksycoca
LIB_KWRITE = -lkwrite
LIB_QT = -lqt $(LIBPNG) $(LIBJPEG) -lXext $(LIB_X11) $(LIBSM)
LIB_SMB = -lsmb
LIB_X11 = -lX11 $(LIBSOCKET)
LN_S = ln -s
MCOPIDL = /opt/kde2/bin/mcopidl
MEINPROC = /opt/kde2/bin/meinproc
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = /usr/lib/qt2//bin/moc
MSGFMT = /home/rasmus/bin/msgfmt
NOOPT_CXXFLAGS =  -fno-exceptions -fno-check-new
NOREPO = -fno-repo
OBJDUMP = @OBJDUMP@
PACKAGE = ksimus
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QT_INCLUDES = -I/usr/lib/qt2//include
QT_LDFLAGS = -L/usr/lib/qt2//lib
RANLIB = ranlib
REPO = -frepo
SETUIDFLAGS = @SETUIDFLAGS@
STRIP = strip
TOPSUBDIRS =  doc ksimus po
UIC = /usr/lib/qt2//bin/uic
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = 
USE_THREADS = @USE_THREADS@
VERSION = 0.3.6-pre1
XGETTEXT = /home/rasmus/bin/xgettext
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS =  -lresolv
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS = 
all_includes = -I/opt/kde2/include -I/usr/lib/qt2//include -I/usr/X11R6/include 
all_libraries = -L/usr/X11R6/lib -L/usr/lib/qt2//lib -L/opt/kde2/lib 
am__include = include
am__quote = 
idldir = @idldir@
install_sh = /home/rasmus/Projekte/ksimus-0.3.7/admin/install-sh
jni_includes = @jni_includes@
kde_appsdir = ${prefix}/share/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${prefix}/share/config
kde_datadir = ${prefix}/share/apps
kde_htmldir = ${prefix}/share/doc/HTML
kde_icondir = ${prefix}/share/icons
kde_includes = /opt/kde2/include
kde_libraries = /opt/kde2/lib
kde_libs_htmldir = /opt/kde2/share/doc/HTML
kde_libs_prefix = /opt/kde2
kde_locale = ${prefix}/share/locale
kde_mimedir = ${prefix}/share/mimelnk
kde_moduledir = ${exec_prefix}/lib/kde2
kde_servicesdir = ${prefix}/share/services
kde_servicetypesdir = ${prefix}/share/servicetypes
kde_sounddir = ${prefix}/share/sounds
kde_templatesdir = ${prefix}/share/templates
kde_wallpaperdir = ${prefix}/share/wallpapers
micodir = @micodir@
qt_includes = /usr/lib/qt2//include
qt_libraries = /usr/lib/qt2//lib
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib

####### kdevelop will overwrite this part!!! (begin)##########
noinst_LIBRARIES = libio.a

#>- libio_a_METASOURCES = AUTO

libio_a_SOURCES = ksimiostorage.cpp ksimiopinselectiondialog.cpp ksimiopinselectionwidget.cpp ksimiocomponent.cpp ksimiojoinboolin.cpp ksimiodevicepropertygeneralwidget.cpp ksimiodevicepropertybasewidget.cpp ksimiodevicepropertydialog.cpp ksimiodevicelist.cpp ksimiodeviceoverviewwidget.cpp ksimiojoin.cpp ksimiopin.cpp ksimiodevice.cpp 

EXTRA_DIST = ksimiodevice.cpp ksimiodevice.h ksimiopin.cpp ksimiopin.h ksimiojoin.cpp ksimiojoin.h ksimiodeviceoverviewwidget.cpp ksimiodeviceoverviewwidget.h ksimiodevicelist.cpp ksimiodevicelist.h ksimiodevicepropertydialog.cpp ksimiodevicepropertydialog.h ksimiodevicepropertybasewidget.cpp ksimiodevicepropertybasewidget.h ksimiodevicepropertygeneralwidget.cpp ksimiodevicepropertygeneralwidget.h ksimiojoinboolin.cpp ksimiojoinboolin.h ksimiocomponent.cpp ksimiocomponent.h ksimiopinselectionwidget.cpp ksimiopinselectionwidget.h ksimiopinselectiondialog.cpp ksimiopinselectiondialog.h ksimiostorage.cpp ksimiostorage.h 


####### kdevelop will overwrite this part!!! (end)############
INCLUDES = $(all_includes) -I.. -I../items -I../lib -I../module -I../tools
subdir = ksimus/io
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libio_a_AR = $(AR) cru
libio_a_LIBADD =
am_libio_a_OBJECTS = ksimiostorage.$(OBJEXT) \
	ksimiopinselectiondialog.$(OBJEXT) \
	ksimiopinselectionwidget.$(OBJEXT) ksimiocomponent.$(OBJEXT) \
	ksimiojoinboolin.$(OBJEXT) \
	ksimiodevicepropertygeneralwidget.$(OBJEXT) \
	ksimiodevicepropertybasewidget.$(OBJEXT) \
	ksimiodevicepropertydialog.$(OBJEXT) ksimiodevicelist.$(OBJEXT) \
	ksimiodeviceoverviewwidget.$(OBJEXT) ksimiojoin.$(OBJEXT) \
	ksimiopin.$(OBJEXT) ksimiodevice.$(OBJEXT)
#>- libio_a_OBJECTS = $(am_libio_a_OBJECTS)
#>+ 14
libio_a_final_OBJECTS = libio_a.all_cpp.o 
libio_a_nofinal_OBJECTS = ksimiostorage.$(OBJEXT) \
	ksimiopinselectiondialog.$(OBJEXT) \
	ksimiopinselectionwidget.$(OBJEXT) ksimiocomponent.$(OBJEXT) \
	ksimiojoinboolin.$(OBJEXT) \
	ksimiodevicepropertygeneralwidget.$(OBJEXT) \
	ksimiodevicepropertybasewidget.$(OBJEXT) \
	ksimiodevicepropertydialog.$(OBJEXT) ksimiodevicelist.$(OBJEXT) \
	ksimiodeviceoverviewwidget.$(OBJEXT) ksimiojoin.$(OBJEXT) \
	ksimiopin.$(OBJEXT) ksimiodevice.$(OBJEXT)\
ksimiopin.moc.o ksimiodevicepropertygeneralwidget.moc.o ksimiodevice.moc.o ksimiopinselectionwidget.moc.o ksimiodeviceoverviewwidget.moc.o ksimiopinselectiondialog.moc.o ksimiojoinboolin.moc.o ksimiodevicepropertydialog.moc.o ksimiojoin.moc.o ksimiocomponent.moc.o ksimiodevicepropertybasewidget.moc.o  \
libio_a_meta_unload.o 
libio_a_OBJECTS = $(libio_a_nofinal_OBJECTS)
#libio_a_OBJECTS = $(libio_a_final_OBJECTS)

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS =  -Wno-long-long
LDFLAGS =  -rdynamic
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/ksimiocomponent.Po \
	./$(DEPDIR)/ksimiodevice.Po \
	./$(DEPDIR)/ksimiodevicelist.Po \
	./$(DEPDIR)/ksimiodeviceoverviewwidget.Po \
	./$(DEPDIR)/ksimiodevicepropertybasewidget.Po \
	./$(DEPDIR)/ksimiodevicepropertydialog.Po \
	./$(DEPDIR)/ksimiodevicepropertygeneralwidget.Po \
	./$(DEPDIR)/ksimiojoin.Po \
	./$(DEPDIR)/ksimiojoinboolin.Po \
	./$(DEPDIR)/ksimiopin.Po \
	./$(DEPDIR)/ksimiopinselectiondialog.Po \
	./$(DEPDIR)/ksimiopinselectionwidget.Po \
	./$(DEPDIR)/ksimiostorage.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = -O2 -fno-exceptions -fno-check-new -fPIC
DIST_SOURCES = $(libio_a_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libio_a_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  ksimus/io/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libio.a: $(libio_a_OBJECTS) $(libio_a_DEPENDENCIES) 
	-rm -f libio.a
	$(libio_a_AR) libio.a $(libio_a_OBJECTS) $(libio_a_LIBADD)
	$(RANLIB) libio.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ksimiocomponent.Po
include ./$(DEPDIR)/ksimiodevice.Po
include ./$(DEPDIR)/ksimiodevicelist.Po
include ./$(DEPDIR)/ksimiodeviceoverviewwidget.Po
include ./$(DEPDIR)/ksimiodevicepropertybasewidget.Po
include ./$(DEPDIR)/ksimiodevicepropertydialog.Po
include ./$(DEPDIR)/ksimiodevicepropertygeneralwidget.Po
include ./$(DEPDIR)/ksimiojoin.Po
include ./$(DEPDIR)/ksimiojoinboolin.Po
include ./$(DEPDIR)/ksimiopin.Po
include ./$(DEPDIR)/ksimiopinselectiondialog.Po
include ./$(DEPDIR)/ksimiopinselectionwidget.Po
include ./$(DEPDIR)/ksimiostorage.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-moc-classes clean-final  clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	tags uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
ksimiopin.moc.cpp: $(srcdir)/ksimiopin.h
	$(MOC) $(srcdir)/ksimiopin.h -o ksimiopin.moc.cpp

#>+ 3
ksimiodevicepropertygeneralwidget.moc.cpp: $(srcdir)/ksimiodevicepropertygeneralwidget.h
	$(MOC) $(srcdir)/ksimiodevicepropertygeneralwidget.h -o ksimiodevicepropertygeneralwidget.moc.cpp

#>+ 3
ksimiodevice.moc.cpp: $(srcdir)/ksimiodevice.h
	$(MOC) $(srcdir)/ksimiodevice.h -o ksimiodevice.moc.cpp

#>+ 3
ksimiopinselectionwidget.moc.cpp: $(srcdir)/ksimiopinselectionwidget.h
	$(MOC) $(srcdir)/ksimiopinselectionwidget.h -o ksimiopinselectionwidget.moc.cpp

#>+ 3
ksimiodeviceoverviewwidget.moc.cpp: $(srcdir)/ksimiodeviceoverviewwidget.h
	$(MOC) $(srcdir)/ksimiodeviceoverviewwidget.h -o ksimiodeviceoverviewwidget.moc.cpp

#>+ 3
ksimiopinselectiondialog.moc.cpp: $(srcdir)/ksimiopinselectiondialog.h
	$(MOC) $(srcdir)/ksimiopinselectiondialog.h -o ksimiopinselectiondialog.moc.cpp

#>+ 3
ksimiojoinboolin.moc.cpp: $(srcdir)/ksimiojoinboolin.h
	$(MOC) $(srcdir)/ksimiojoinboolin.h -o ksimiojoinboolin.moc.cpp

#>+ 3
ksimiodevicepropertydialog.moc.cpp: $(srcdir)/ksimiodevicepropertydialog.h
	$(MOC) $(srcdir)/ksimiodevicepropertydialog.h -o ksimiodevicepropertydialog.moc.cpp

#>+ 3
ksimiojoin.moc.cpp: $(srcdir)/ksimiojoin.h
	$(MOC) $(srcdir)/ksimiojoin.h -o ksimiojoin.moc.cpp

#>+ 3
ksimiocomponent.moc.cpp: $(srcdir)/ksimiocomponent.h
	$(MOC) $(srcdir)/ksimiocomponent.h -o ksimiocomponent.moc.cpp

#>+ 3
ksimiodevicepropertybasewidget.moc.cpp: $(srcdir)/ksimiodevicepropertybasewidget.h
	$(MOC) $(srcdir)/ksimiodevicepropertybasewidget.h -o ksimiodevicepropertybasewidget.moc.cpp

#>+ 3
clean-metasources:
	-rm -f  ksimiopin.moc.cpp ksimiodevicepropertygeneralwidget.moc.cpp ksimiodevice.moc.cpp ksimiopinselectionwidget.moc.cpp ksimiodeviceoverviewwidget.moc.cpp ksimiopinselectiondialog.moc.cpp ksimiojoinboolin.moc.cpp ksimiodevicepropertydialog.moc.cpp ksimiojoin.moc.cpp ksimiocomponent.moc.cpp ksimiodevicepropertybasewidget.moc.cpp

#>+ 2
docs-am:

#>+ 6
force-reedit:
	

	cd $(top_srcdir) && perl admin/am_edit ksimus/io/Makefile.in


#>+ 10
libio_a_meta_unload.cpp:  ksimiopin.moc.cpp ksimiodevicepropertygeneralwidget.moc.cpp ksimiodevice.moc.cpp ksimiopinselectionwidget.moc.cpp ksimiodeviceoverviewwidget.moc.cpp ksimiopinselectiondialog.moc.cpp ksimiojoinboolin.moc.cpp ksimiodevicepropertydialog.moc.cpp ksimiojoin.moc.cpp ksimiodevicepropertybasewidget.moc.cpp ksimiocomponent.moc.cpp
	@echo 'creating libio_a_meta_unload.cpp'
	@-rm -f libio_a_meta_unload.cpp
	@echo 'static const char * _metalist_libio_a[] = {' > libio_a_meta_unload.cpp
	@cat  ksimiopin.moc.cpp ksimiodevicepropertygeneralwidget.moc.cpp ksimiodevice.moc.cpp ksimiopinselectionwidget.moc.cpp ksimiodeviceoverviewwidget.moc.cpp ksimiopinselectiondialog.moc.cpp ksimiojoinboolin.moc.cpp ksimiodevicepropertydialog.moc.cpp ksimiojoin.moc.cpp ksimiodevicepropertybasewidget.moc.cpp ksimiocomponent.moc.cpp | grep 'char.*className' | sed -e 's/.*[^A-Za-z0-9_:]\([A-Za-z0-9_:]*\)::className.*$$/\"\1\",/' | sort | uniq >> libio_a_meta_unload.cpp
	@echo '0};' >> libio_a_meta_unload.cpp
	@echo '#include <kunload.h>' >> libio_a_meta_unload.cpp
	@echo '_UNLOAD(libio_a)' >> libio_a_meta_unload.cpp


#>+ 3
clean-moc-classes:
	-rm -f  libio_a_meta_unload.cpp

#>+ 11
libio_a.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/ksimiostorage.cpp $(srcdir)/ksimiopinselectiondialog.cpp $(srcdir)/ksimiopinselectionwidget.cpp $(srcdir)/ksimiocomponent.cpp $(srcdir)/ksimiojoinboolin.cpp $(srcdir)/ksimiodevicepropertygeneralwidget.cpp $(srcdir)/ksimiodevicepropertybasewidget.cpp $(srcdir)/ksimiodevicepropertydialog.cpp $(srcdir)/ksimiodevicelist.cpp $(srcdir)/ksimiodeviceoverviewwidget.cpp $(srcdir)/ksimiojoin.cpp $(srcdir)/ksimiopin.cpp $(srcdir)/ksimiodevice.cpp libio_a_meta_unload.cpp  ksimiopin.moc.cpp ksimiodevicepropertygeneralwidget.moc.cpp ksimiodevice.moc.cpp ksimiopinselectionwidget.moc.cpp ksimiodeviceoverviewwidget.moc.cpp ksimiopinselectiondialog.moc.cpp ksimiojoinboolin.moc.cpp ksimiodevicepropertydialog.moc.cpp ksimiojoin.moc.cpp ksimiocomponent.moc.cpp ksimiodevicepropertybasewidget.moc.cpp
	@echo 'creating libio_a.all_cpp.cpp ...'; \
	rm -f libio_a.all_cpp.files libio_a.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libio_a.all_cpp.final; \
	for file in ksimiostorage.cpp ksimiopinselectiondialog.cpp ksimiopinselectionwidget.cpp ksimiocomponent.cpp ksimiojoinboolin.cpp ksimiodevicepropertygeneralwidget.cpp ksimiodevicepropertybasewidget.cpp ksimiodevicepropertydialog.cpp ksimiodevicelist.cpp ksimiodeviceoverviewwidget.cpp ksimiojoin.cpp ksimiopin.cpp ksimiodevice.cpp libio_a_meta_unload.cpp  ksimiopin.moc.cpp ksimiodevicepropertygeneralwidget.moc.cpp ksimiodevice.moc.cpp ksimiopinselectionwidget.moc.cpp ksimiodeviceoverviewwidget.moc.cpp ksimiopinselectiondialog.moc.cpp ksimiojoinboolin.moc.cpp ksimiodevicepropertydialog.moc.cpp ksimiojoin.moc.cpp ksimiocomponent.moc.cpp ksimiodevicepropertybasewidget.moc.cpp; do \
	  echo "#include \"$$file\"" >> libio_a.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libio_a.all_cpp.final; \
	done; \
	cat libio_a.all_cpp.final libio_a.all_cpp.files  > libio_a.all_cpp.cpp; \
	rm -f libio_a.all_cpp.final libio_a.all_cpp.files

#>+ 3
clean-final:
	-rm -f libio_a.all_cpp.cpp

#>+ 2
final:
	$(MAKE) libio_a_OBJECTS="$(libio_a_final_OBJECTS)" all-am
#>+ 2
no-final:
	$(MAKE) libio_a_OBJECTS="$(libio_a_nofinal_OBJECTS)" all-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo
